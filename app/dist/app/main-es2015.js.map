{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material/angular-material.module.ts","./src/app/angular-material/menu/menu.component.ts","./src/app/angular-material/menu/menu.component.html","./src/app/angular-material/multi-select/multi-select.component.ts","./src/app/angular-material/multi-select/multi-select.component.html","./src/app/api/api-endpoint.ts","./src/app/api/api.interceptor.ts","./src/app/api/api.module.ts","./src/app/api/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/authentication-guard.service.ts","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/authentication.service.ts","./src/app/candidates/candidate/associate-job/associate-job.component.ts","./src/app/candidates/candidate/associate-job/associate-job.component.html","./src/app/candidates/candidate/associate-job/stage-evaluator/stage-evaluator.component.ts","./src/app/candidates/candidate/associate-job/stage-evaluator/stage-evaluator.component.html","./src/app/candidates/candidate/candidate.component.ts","./src/app/candidates/candidate/candidate.component.html","./src/app/candidates/candidate/upload-file/upload-file.component.ts","./src/app/candidates/candidate/upload-file/upload-file.component.html","./src/app/candidates/candidates.component.ts","./src/app/candidates/candidates.component.html","./src/app/candidates/candidates.service.ts","./src/app/candidates/new-candidate/new-candidate.component.ts","./src/app/candidates/new-candidate/new-candidate.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/jobs/jobs.component.ts","./src/app/jobs/jobs.component.html","./src/app/jobs/stages/stages.component.ts","./src/app/jobs/stages/stages.component.html","./src/app/skills/skills.component.ts","./src/app/skills/skills.component.html","./src/app/user-config/user-config.component.ts","./src/app/user-config/user-config.component.html","./src/app/utils/utils.ts","./src/assets/error-messages.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { MultiSelectComponent } from './multi-select/multi-select.component';\nimport { MenuComponent } from './menu/menu.component';\n\n@NgModule({\n  declarations: [MultiSelectComponent, MenuComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatMenuModule\n  ],\n  exports: [MultiSelectComponent, MenuComponent]\n})\nexport class AngularMaterialModule { }\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @Input() content: string = '';\n  @Input() items: string[] = [];\n  @Output() clicked = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  emitEvent = (content: string) => this.clicked.emit(content);\n\n}\n","<button mat-button [matMenuTriggerFor]=\"menu\"> {{ content }} </button>\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item *ngFor=\"let item of items\" (click)=\"emitEvent(item)\">{{ item }}</button>\n</mat-menu>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-multi-select',\n  templateUrl: './multi-select.component.html',\n  styleUrls: ['./multi-select.component.css']\n})\nexport class MultiSelectComponent implements OnInit {\n\n  formSelect = new FormControl();\n\n  @Input() label: string;\n  @Input() list: any[];\n \n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.label, this.list)\n  }\n\n}\n","<mat-form-field appearance=\"fill\">\n    <mat-label>{{ label }}</mat-label>\n    <mat-select [formControl]=\"formSelect\" multiple>\n        <mat-select-trigger>\n            {{formSelect.value ? formSelect.value[0] : ''}}\n            <span *ngIf=\"formSelect.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{formSelect.value.length - 1}} {{formSelect.value?.length === 2 ? 'other' : 'others'}})\n            </span>\n        </mat-select-trigger>\n        <mat-option *ngFor=\"let val of list\" [value]=\"val\">{{val}}</mat-option>\n    </mat-select>\n</mat-form-field>\n    ","const HOST = \"https://software-engineering-lab-api.herokuapp.com\";\nconst PATH = {\n    JOBS: \"/job-opportunities/\",\n    SKILLS: \"/skills/\",\n    STAGES: \"/stages/\",\n    CANDIDATES: \"/candidates/\",\n    USERS: '/users/',\n    DEPARTMENTS: '/departments/',\n    EVALUATIONS: '/evaluations/'\n}\nexport const STAGES_PATH = PATH.STAGES;\nexport const JOBS_PATH = PATH.JOBS;\n\nexport const API = {\n    authenticate: HOST,\n    departments: `${HOST}${PATH.DEPARTMENTS}`,\n    users: `${HOST}${PATH.USERS}`,\n    job_opportunities: `${HOST}${PATH.JOBS}`,\n    skills: `${HOST}${PATH.SKILLS}`,\n    stages: `${HOST}${PATH.STAGES}`,\n    candidates: `${HOST}${PATH.CANDIDATES}`,\n    evaluations: `${HOST}${PATH.EVALUATIONS}`,\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n\tconstructor(private authService: AuthenticationService) {}\n\n\tintercept( req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tif (this.authService.isAuthenticated()){\n\t\t\tconst auth = this.authService.getAuthorization();\n\t\t\tconst dupReq = req.clone({ \n\t\t\t\theaders: req.headers\n\t\t\t\t\t.set('Authorization', \"Basic \" + auth)\n\t\t\t\t\t.set(\"Content-Type\", \"application/json\")\n\t\t\t});\n\t\t\treturn next.handle(dupReq);\n\t\t}\n\t\treturn next.handle(req);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiInterceptor } from './api.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [ \n    {provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true}\n  ]\n})\nexport class ApiModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { API, STAGES_PATH, JOBS_PATH } from './api-endpoint';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { Stage } from '../model-interfaces/stage';\nimport { Skill } from '../model-interfaces/skill';\nimport { Candidate } from '../model-interfaces/candidate';\nimport { User } from '../model-interfaces/user';\nimport { Evaluate } from '../model-interfaces/evaluate';\nimport { builderObject, hasPropertyWithValueNullOrEmpty } from '../utils/utils';\nimport { CandidateJobOpportunity } from '../model-interfaces/candidate-job-opportunity';\n\nconst json = (object: Object) => JSON.stringify(object);\n\n@Injectable({ providedIn: 'root' })\nexport class APIService {\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\t// delete = (data: any, interfaceName: string) => {\n\t// \tswitch (interfaceName) {\n\t// \t\tcase \"job\": return this.jobOpportunities.delete(data);\n\t// \t\tcase \"stage\": return this.stages.delete(data);\n\t// \t\tcase \"skill\": return this.skills.delete(data);\n\t// \t\tdefault: throw new Error(\"API Service DELETE : the interface name is not configured\");\n\t// \t}\n\t// }\n\n\tuser = {\n\t\tcreate: (user: User) => this.httpClient.post(API.users, json(user)),\n\t\tevaluators: () => this.httpClient.get(`${API.users}evaluators`),\n\t}\n\tget = {\n\t\t// Users\n\t\tevaluators: () => this.httpClient.get(`${API.users}evaluators`),\n\t\t// Departments\n\t\tdepartments: () => this.httpClient.get(API.departments),\n\t\t// Job Oppotunities\n\t\tjob_opportunities: () => this.httpClient.get(API.job_opportunities),\n\t\tjob_opportunity: (id: string) => this.httpClient.get(`${API.job_opportunities}${id}`),\n\t\tstages_of_job_opportunity: (job_id: Stage) => this.httpClient.get(`${API.job_opportunities}${job_id}${STAGES_PATH}`),\n\t\t// Skills\n\t\tall_skills: () => this.httpClient.get(API.skills),\n\t\tskill_by_id: (id: string) => this.httpClient.get(`${API.skills}${id}`),\n\t\t// Candidates\n\t\tall_candidates: () => this.httpClient.get(API.candidates),\n\t\tcandidate: (id: string) => this.httpClient.get(`${API.candidates}${id}`),\n\t\tcandidate_resume: (candidate_id: string) => this.httpClient.get(`${API.candidates}${candidate_id}/resume`),\n\n\t\tevaluations_that_the_user_is_responsible: () => this.httpClient.get(`${API.evaluations}`),\n\t\tjob_opportunity_by_evaluation: (id: string) => this.httpClient.get(`${API.evaluations}${id}/job-opportunity`),\n\t\tcandidate_by_evaluation: (id: string) => this.httpClient.get(`${API.evaluations}${id}/candidate`),\n\t\tskills_by_evaluation: (id: string) => this.httpClient.get(`${API.evaluations}${id}/skills`),\n\t\tcandidate_curriculum: (id: string) => this.httpClient.get(`${API.candidates}${id}/resume`)\n\t}\n\tpost = {\n\t\tuser: (user: User) => this.httpClient.post(API.users, json(user)),\n\t\tjob_opportunity: (job: JobOpportunity) => {\n\t\t\tconst newValue = builderObject(job, ['name', 'description', 'department']);\n\t\t\treturn this.httpClient.post(API.job_opportunities, json(newValue));\n\t\t},\n\t\tskill: (skill: Skill) => {\n\t\t\tconst newValue = builderObject(skill, ['name', 'description']);\n\t\t\treturn this.httpClient.post(API.skills, json(newValue));\n\t\t},\n\t\tcandidate: (candidate: Candidate) => {\n\t\t\tconst newValue = builderObject(candidate, ['name', 'cpf', 'address', 'links']);\n\t\t\treturn this.httpClient.post(API.candidates, json(newValue));\n\t\t},\n\t\tcandidate_curriculum: (candidate_id: string, file: FormData) => {\n\t\t\tdebugger\n\t\t\tconst empty = file.get('resume') === 'null';\n\t\t\tif (empty) throw new Error('You must attach a resume to the candidate!');\n\t\t\treturn this.httpClient.post(`${API.candidates}${candidate_id}/resume`, file, { observe: 'response' });\n\t\t},\n\t\tevaluate: (evaluate: Evaluate) => {\n\t\t\tconst newValue = builderObject(evaluate, ['stageEvaluator', 'skillScoreList']);\n\t\t\treturn this.httpClient.post(API.evaluations, json(newValue));\n\t\t}\n\n\t}\n\tupdate = {\n\t\tjob_opportunity: (job: JobOpportunity) => {\n\t\t\tconst newData = { name: job.name, description: job.description, department: job.department };\n\t\t\treturn this.httpClient.put(`${API.job_opportunities}${job._id}`, json(newData));\n\t\t},\n\t\tskill: (skill: Skill) => {\n\t\t\tconst newData = builderObject(skill, ['name', 'description']);\n\t\t\treturn this.httpClient.put(`${API.skills}${skill._id}`, json(skill));\n\t\t},\n\t\tstage: (stage: Stage) => {\n\t\t\tconst newData = builderObject(stage, ['name', 'description', 'skills']);\n\t\t\treturn this.httpClient.put(`${API.stages}${stage._id}`, json(newData))\n\t\t},\n\t\tcandidate: (candidate: Candidate) => {\n\t\t\tconst newData = builderObject(candidate, ['name', 'cpf', 'address', 'links']);\n\t\t\treturn this.httpClient.put(`${API.candidates}${candidate._id}`, json(newData))\n\t\t},\n\t}\n\tdelete = {\n\t\tjob_opportunity: (id: string) => this.httpClient.delete(`${API.job_opportunities}${id}`, { observe: 'response' }),\n\t\tskill: (id: string) => this.httpClient.delete(`${API.skills}${id}`, { observe: 'response' }),\n\t\tstage: (id: string) => this.httpClient.delete(`${API.stages}${id}`, { observe: 'response' }),\n\t\t// Candidates\n\t\tcandidate: (id: string) => this.httpClient.delete(`${API.candidates}${id}`, { observe: 'response' }),\n\t\tcandidate_curriculum: (id: string) => this.httpClient.delete(`${API.candidates}${id}/resume`, { observe: 'response' }),\n\t}\n\tadd_estages_to_job_opportunity = (stage: Stage, job_id: string) => {\n\t\tconst newStage = builderObject(stage, ['name', 'description', 'skills']);\n\t\treturn this.httpClient.post(`${API.job_opportunities}${job_id}${STAGES_PATH}`, json(newStage));\n\t}\n\tassociate_candidate_with_job_opportunity = (candidate_id: string, associate: CandidateJobOpportunity) => this.httpClient.post(`${API.candidates}${candidate_id}${JOBS_PATH}`, json(associate));\n\tdisassociate_candidate_with_job_opportunity = (associate_id: string) => this.httpClient.delete(`${API.candidates}job-opportunities/${associate_id}`);\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication/authentication.component';\nimport { AuthenticationGuardService } from './authentication/authentication-guard.service';\nimport { UserConfigComponent } from './user-config/user-config.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { CandidatesComponent } from './candidates/candidates.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'auth', pathMatch: 'full' },\n  { path: 'auth', component: AuthenticationComponent },\n  { \n    path: 'home', \n    canActivate: [AuthenticationGuardService],\n    loadChildren: () => import('./home/home.module').then(m => m.HomeModule)\n  },\n  { path: 'jobs', canActivate: [AuthenticationGuardService], component: JobsComponent },\n  { path: 'users', canActivate: [AuthenticationGuardService], component: UserConfigComponent },\n  { path: 'skills', canActivate: [AuthenticationGuardService], component: SkillsComponent },\n  { path: 'candidates', canActivate: [AuthenticationGuardService], component: CandidatesComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { UserConfigComponent } from './user-config/user-config.component';\nimport { HomeModule } from './home/home.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { StagesComponent } from './jobs/stages/stages.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { AngularMaterialModule } from './angular-material/angular-material.module';\nimport { CandidatesComponent } from './candidates/candidates.component';\nimport { NewCandidateComponent } from './candidates/new-candidate/new-candidate.component';\nimport { UploadFileComponent } from './candidates/candidate/upload-file/upload-file.component';\nimport { CandidateComponent } from './candidates/candidate/candidate.component';\nimport { StageEvaluatorComponent } from './candidates/candidate/associate-job/stage-evaluator/stage-evaluator.component';\nimport { AssociateJobComponent } from './candidates/candidate/associate-job/associate-job.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    StagesComponent,\n    JobsComponent,\n    UserConfigComponent,\n    SkillsComponent,\n    CandidatesComponent,\n    NewCandidateComponent,\n    UploadFileComponent,\n    CandidateComponent,\n    AssociateJobComponent,\n    StageEvaluatorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationModule,\n    HomeModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthenticationGuardService implements CanActivate {\n  constructor(public auth: AuthenticationService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['auth']);\n      return false;\n    }\n    return true;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport { User } from '../model-interfaces/user';\nimport { APIService } from '../api/api.service';\nimport { Stage } from '../model-interfaces/stage';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.css']\n})\nexport class AuthenticationComponent implements OnInit {\n\n  public authForm: FormGroup;\n\n  constructor(\n    private service: AuthenticationService,\n    private router: Router,\n    private apiService: APIService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.authForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n  }\n  onSubmit(userData) {\n    const user: User = { _id: '', username: userData.username, password: userData.password, department: null, role: null };\n    this.service\n      .authenticate(user)\n      .then(response => this.router.navigate(['/home']))\n      .catch(error => console.log(error));\n  }\n\n}\n","\n<form class=\"authentication\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit(authForm.value)\">\n    <input type=\"text\" formControlName=\"username\" placeholder=\"Usuário\">\n    <input type=\"password\" formControlName=\"password\" placeholder=\"Senha de Acesso\">\n    <button type=\"submit\">Acessar</button>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthenticationService } from './authentication.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiModule } from '../api/api.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthenticationGuardService } from './authentication-guard.service';\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ApiModule\n  ],\n  providers: [AuthenticationService, AuthenticationGuardService],\n  bootstrap: [AuthenticationComponent]\n})\nexport class AuthenticationModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../model-interfaces/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API } from '../api/api-endpoint';\nimport { ErrorMessages } from 'src/assets/error-messages';\n\nconst TOKEN = \"token\";\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tauthenticate = (user: User): Promise<string> => {\n\t\tif (!user.username) throw new Error('Authentication Service : authentication method requires a user to be informed.');\n\t\tif (!user.password) throw new Error('Authentication Service : authentication method requires the password to be informed.');\n\n\t\tconst auth = btoa(`${user.username}:${user.password}`);\n\n\t\tlet headers: HttpHeaders = new HttpHeaders();\n\n\t\theaders = headers.append(\"Authorization\", `Basic ${auth}`);\n\t\theaders = headers.append(\"Content-Type\", \"application/json\");\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.http.get(API.authenticate, { headers, observe: 'response' }).subscribe(\n\t\t\t\tresponse => {\n\t\t\t\t\tif (response.status === 200)\n\t\t\t\t\t\tif (response.body.hasOwnProperty(\"data\"))\n\t\t\t\t\t\t\tsessionStorage.setItem(TOKEN, auth);\n\t\t\t\t\tresolve(ErrorMessages.authenticate.valid);\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\treject(new Error(ErrorMessages.authenticate.invalid));\n\t\t\t\t}\n\t\t\t);\n\t\t})\n\n\t}\n\n\tisAuthenticated = (): boolean => !!sessionStorage.getItem(TOKEN);\n\tgetAuthorization = (): string => sessionStorage.getItem(TOKEN);\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { CandidatesService } from '../../candidates.service';\nimport { JobOpportunity } from 'src/app/model-interfaces/job-opportunity';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { CandidateJobOpportunity } from 'src/app/model-interfaces/candidate-job-opportunity';\nimport { fbGetValue, fbSetValue } from 'src/app/utils/utils';\nimport { APIService } from 'src/app/api/api.service';\n\n@Component({\n  selector: 'app-associate-job',\n  templateUrl: './associate-job.component.html',\n  styleUrls: ['./associate-job.component.css']\n})\nexport class AssociateJobComponent implements OnInit {\n\n  associateJobForm: FormGroup;\n  selectedJob: JobOpportunity;\n  @Input() candidateId: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private candidatesService: CandidatesService,\n    private apiService: APIService\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.candidateId)\n      throw new Error('AssociateJobComponent : there are properties that have not been loaded.');\n    const associate: CandidateJobOpportunity = { _id: null, jobOpportunityId: '', stageEvaluatorList: null };\n    this.associateJobForm = this.formBuilder.group(associate);\n    fbSetValue(this.associateJobForm, 'stageEvaluatorList', []);\n  }\n  selectJob = () => {\n    let jobResult: JobOpportunity;\n    this.candidatesService.jobs.map(job =>\n      job._id === this.associateJobForm.get('jobOpportunityId').value ? jobResult = job : null);\n    this.selectedJob = jobResult;\n  }\n  jobs = () => this.candidatesService.jobs;\n\n  associate(data: CandidateJobOpportunity) {\n    this.apiService.associate_candidate_with_job_opportunity(this.candidateId, data).subscribe(\n      (associateCreated: CandidateJobOpportunity) => {\n        console.log(associateCreated);\n        this.associateJobForm.reset();\n      },\n      error => console.error(error)\n    );\n  }\n}\n","<form class=\"associate-job\" [formGroup]=\"associateJobForm\" (ngSubmit)=\"associate(associateJobForm.value)\">\n  <div class=\"associate-job__title\">Associar Vaga</div>\n  <select type=\"text\" formControlName=\"jobOpportunityId\" (change)=\"selectJob()\">\n    <option *ngFor=\"let job of jobs()\" [value]=\"job._id\">{{ job.name }}</option>\n  </select>\n  <div class=\"associate-job__stages\">\n    <app-stage-evaluator *ngFor=\"let stage of selectedJob?.stages\" [form]=\"associateJobForm\" [stage]=\"stage\"></app-stage-evaluator>\n  </div>\n  <button type=\"submit\">Associar</button>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Stage } from 'src/app/model-interfaces/stage';\nimport { CandidatesService } from 'src/app/candidates/candidates.service';\nimport { StageEvaluator } from 'src/app/model-interfaces/stage-evaluator';\nimport { fbGetValue, fbSetValue } from 'src/app/utils/utils';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-stage-evaluator',\n  templateUrl: './stage-evaluator.component.html',\n  styleUrls: ['./stage-evaluator.component.css']\n})\nexport class StageEvaluatorComponent implements OnInit {\n\n  @Input() stage: Stage;\n  @Input() form: FormGroup;\n  evaluatorSelected: string;\n  constructor(\n    private candidatesService: CandidatesService\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.stage || !this.form)\n      throw new Error('StageEvaluatorComponent : there are properties that have not been loaded.');\n    this.candidatesService.reloadJobs();\n    this.candidatesService.reloadEvaluators();\n    this.evaluatorSelected = null;\n  }\n  evaluators = () => this.candidatesService.evaluators;\n  addStageEvaluator = (stageId: string) => {\n    const key: string = 'stageEvaluatorList';\n    let currentValues: StageEvaluator[] = fbGetValue(this.form, key);\n    if (this.evaluatorSelected) {\n      const newStageEvaluator: StageEvaluator = { stage: stageId, evaluator: this.evaluatorSelected };\n      currentValues = currentValues.filter(stageEvaluator => stageEvaluator.stage !== stageId);\n      fbSetValue(this.form, key, [...currentValues, newStageEvaluator]);\n    }\n  }\n}\n","<div class=\"stage-evaluator\">\n  <p>{{ stage.name }}</p>\n  <select type=\"text\" [(ngModel)]=\"evaluatorSelected\" [ngModelOptions]=\"{standalone: true}\"\n    (change)=\"addStageEvaluator(stage._id)\">\n    <option *ngFor=\"let evaluator of evaluators()\" [value]=\"evaluator._id\">{{ evaluator.username }}</option>\n  </select>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Candidate } from 'src/app/model-interfaces/candidate';\nimport { APIService } from 'src/app/api/api.service';\nimport { toggleDisabledInputsAndSelect } from 'src/app/utils/utils';\n\n@Component({\n\tselector: 'app-candidate',\n\ttemplateUrl: './candidate.component.html',\n\tstyleUrls: ['./candidate.component.css']\n})\nexport class CandidateComponent implements OnInit {\n\n\t@Input() candidate: Candidate;\n\t@Output() candidateRemoved = new EventEmitter();\n\n\tuploadCandidate = false;\n\tnewLink: string = '';\n\thasCurriculum = true;\n\tcurriculumActions: string[] = ['download', 'delete'];\n\n\t// associatedJobs: Job\n\tconstructor(\n\t\tprivate apiService: APIService\n\t) { }\n\n\tngOnInit(): void {\n\t\tif (!this.candidate)\n\t\t\tthrow new Error('CandidateComponent : there are properties that have not been loaded.');\n\t\tthis.hasCurriculum = this.candidate.hasResume;\n\t}\n\tdelete() {\n\t\tthis.apiService.delete.candidate(this.candidate._id).subscribe(\n\t\t\tresponse => {\n\t\t\t\tif (response.status === 204) {\n\t\t\t\t\tconsole.log('Candidato deletado com sucesso');\n\t\t\t\t\tthis.candidateRemoved.emit(this.candidate._id);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => console.warn(error)\n\t\t);\n\t}\n\tedit() {\n\t\ttoggleDisabledInputsAndSelect(this.candidate._id);\n\t\tthis.uploadCandidate = true;\n\t}\n\tupdate() {\n\t\tthis.apiService.update.candidate(this.candidate).subscribe(\n\t\t\t(candidateUpdated: Candidate) => {\n\t\t\t\ttoggleDisabledInputsAndSelect(candidateUpdated._id);\n\t\t\t\tthis.uploadCandidate = false;\n\t\t\t},\n\t\t\terror => console.log(error)\n\t\t);\n\t}\n\n\taddLinkToCandidate = () => {\n\t\tif (this.newLink && !this.candidate.links.includes(this.newLink)) {\n\t\t\tthis.candidate.links.push(this.newLink);\n\t\t\tthis.newLink = '';\n\t\t}\n\t}\n\tremoveLinkOfCandidate = (url: string) =>\n\t\tthis.candidate.links = this.candidate.links.filter(link => !(link === url));\n\n\tcurriculumClicked = (action: 'download' | 'delete') => {\n\t\tdebugger\n\t\tif (action === 'download') {\n\t\t\tthis.apiService.get.candidate_curriculum(this.candidate._id).subscribe(\n\t\t\t\tcurriculum => {\n\t\t\t\t\tconsole.log(curriculum);\n\t\t\t\t},\n\t\t\t\terror => console.error(error)\n\t\t\t);\n\t\t}\n\t\telse this.apiService.delete.candidate_curriculum(this.candidate._id).subscribe(\n\t\t\tresponse => {\n\t\t\t\tif (response.status === 204) {\n\t\t\t\t\tconsole.log('Currículo deletado com sucesso');\n\t\t\t\t\tthis.hasCurriculum = false;\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => console.error(error)\n\t\t);\n\t}\n\tcurriculumAdded = (result: boolean) => this.hasCurriculum = result;\n\n}\n","<div class=\"candidate\" [id]=\"candidate._id\">\n    <app-menu *ngIf=\"hasCurriculum; else uploadCurriculo\" content=\"Currículo\" [items]=\"curriculumActions\" (clicked)=\"curriculumClicked($event)\"></app-menu>\n    <ng-template #uploadCurriculo>\n        <app-upload-file [candidateId]=\"candidate._id\" (curriculumAdded)=\"curriculumAdded($event)\"></app-upload-file>\n    </ng-template>\n    <input [(ngModel)]=\"candidate.name\" disabled/>\n    <input [(ngModel)]=\"candidate.cpf\" disabled/>\n    <input [(ngModel)]=\"candidate.address\" disabled/>\n    <div class=\"candidate-links-content\">\n        <div *ngIf=\"uploadCandidate\" class=\"candidate__new-link\">\n            <input placeholder=\"Perfil Social\" [(ngModel)]=\"newLink\" [ngModelOptions]=\"{standalone: true}\">\n            <button type=\"button\" (click)=\"addLinkToCandidate()\">Adicionar</button>\n        </div>\n        <div class=\"candidate__links\">\n            <div *ngFor=\"let link of candidate.links\">\n                {{link}}\n                <button *ngIf=\"uploadCandidate\" (click)=\"removeLinkOfCandidate(link)\">Remover</button>\n            </div>\n        </div>\n    </div>\n    <button *ngIf=\"!uploadCandidate; else updateCandidate\" (click)=\"edit()\"> Editar </button>\n    <ng-template #updateCandidate>\n        <button (click)=\"update()\"> Atualizar </button>\n    </ng-template>\n    <app-associate-job [candidateId]=\"candidate._id\"></app-associate-job>\n    <div candidate-job-opportunities>\n\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { APIService } from 'src/app/api/api.service';\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.css']\n})\nexport class UploadFileComponent implements OnInit {\n  uploadForm: FormGroup;\n  @Input() candidateId: string;\n  @Output() curriculumAdded = new EventEmitter<boolean>();\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService\n  ) { }\n\n  ngOnInit(): void {\n    this.uploadForm = this.formBuilder.group({ file: null });\n  }\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadForm.get('file').setValue(file);\n    }\n  }\n  onSubmit() {\n    const file = new FormData();\n    file.append('resume', this.uploadForm.get('file').value);\n    this.apiService.post.candidate_curriculum(this.candidateId, file).subscribe(\n      response => {\n        if (response.status === 201) {\n          console.log('Currículo carregado com sucesso');\n          this.curriculumAdded.emit(true);\n        }\n      },\n      error => console.error(error)\n    );\n  }\n}\n\n","<form class=\"upload-file\" [formGroup]=\"uploadForm\" (ngSubmit)=\"onSubmit()\">      \n        <input type=\"file\" name=\"file\" (change)=\"onFileSelect($event)\" accept=\"application/pdf\"/>\n        <button type=\"submit\">Enviar</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { APIService } from '../api/api.service';\nimport { Candidate } from '../model-interfaces/candidate';\nimport { toggleDisabledInputsAndSelect } from '../utils/utils';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\n\n@Component({\n\tselector: 'app-candidates',\n\ttemplateUrl: './candidates.component.html',\n\tstyleUrls: ['./candidates.component.css']\n})\nexport class CandidatesComponent implements OnInit {\n\tcandidates: Candidate[] = [];\n\tcurrentCandidate: string;\n\tnewLink: string;\n\tjobs: JobOpportunity[] = [];\n\n\tconstructor(\n\t\tprivate apiService: APIService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.apiService.get.all_candidates().subscribe(\n\t\t\t(candidates: Candidate[]) => this.candidates = candidates,\n\t\t\t(error) => console.log(error)\n\t\t);\n\t}\n\taddCandidate = (candidate: Candidate) => this.candidates.push(candidate);\n\tremoveCandidate = (id: string) => this.candidates = this.candidates.filter(c => !(c._id === id));\n\n}\n","<app-new-candidate (candidateCreated)=\"addCandidate($event)\"></app-new-candidate>\n<div class=\"candidates\">\n    <app-candidate \n        *ngFor=\"let candidate of candidates\"\n        [candidate]=\"candidate\" \n        (candidateRemoved)=\"removeCandidate($event)\">\n    </app-candidate>\n</div>","import { Injectable } from '@angular/core';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { APIService } from '../api/api.service';\nimport { User } from '../model-interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidatesService {\n  jobs: JobOpportunity[] = [];\n  evaluators: User[] = [];\n  constructor(\n    private apiService: APIService,\n  ) {\n    this.getJobs();\n    this.getEvaluators();\n  }\n  private getJobs = () => this.apiService.get.job_opportunities().subscribe(\n    (jobs: JobOpportunity[]) => this.jobs = jobs,\n    error => console.log(error)\n  );\n  reloadJobs = () => this.getJobs();\n  getEvaluators = () => this.apiService.get.evaluators().subscribe(\n    (evaluators: User[]) => this.evaluators = evaluators,\n    error => console.log(error)\n  );\n  reloadEvaluators = () => this.getEvaluators();\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Candidate } from 'src/app/model-interfaces/candidate';\nimport { APIService } from 'src/app/api/api.service';\nimport { fbSetValue, fbGetValue } from 'src/app/utils/utils';\n\n@Component({\n  selector: 'app-new-candidate',\n  templateUrl: './new-candidate.component.html',\n  styleUrls: ['./new-candidate.component.css']\n})\nexport class NewCandidateComponent implements OnInit {\n  newLink: string;\n  candidateForm: FormGroup;\n\n  @Output() candidateCreated = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private apiService: APIService) { }\n\n  ngOnInit(): void {\n    const newCandidate: Candidate = { _id: null, name: '', cpf: '', address: '', links: null, curriculum: null, jobOpportunities: null, hasResume: null };\n    this.candidateForm = this.formBuilder.group(newCandidate);\n    fbSetValue(this.candidateForm, 'links', []);\n  }\n\n  addLink = () => {\n    const links: string[] = fbGetValue(this.candidateForm, 'links');\n    if (this.newLink && !links.includes(this.newLink)) {\n      fbSetValue(this.candidateForm, 'links', [...links, this.newLink]);\n      this.newLink = '';\n    }\n  };\n  create(candidate: Candidate) {\n    this.apiService.post.candidate(candidate).subscribe(\n      (candidateCreated: Candidate) => {\n        this.emitCandidateCreated(candidateCreated);\n        this.candidateForm.reset();\n      },\n      error => console.error(error)\n    );\n  }\n  emitCandidateCreated = (candidate: Candidate) => this.candidateCreated.emit(candidate);\n  getLinks = () => fbGetValue(this.candidateForm, 'links');\n  removeLink = (url: string) => {\n    const newLinks: string[] = fbGetValue(this.candidateForm, 'links').filter(link => !(link === url));\n    fbSetValue(this.candidateForm, 'links', newLinks);\n  }\n}\n","<form class=\"new-candidate\" [formGroup]=\"candidateForm\" (ngSubmit)=\"create(candidateForm.value)\">\n    <div class=\"new-candidate__title\">Novo Candidato</div>\n    <input formControlName=\"name\" placeholder=\"Nome\">\n    <input formControlName=\"cpf\" maxlength=\"11\" placeholder=\"CPF\">\n    <input formControlName=\"address\" placeholder=\"Endereço\">\n    <div class=\"new-candidate__new-link\">\n        <input placeholder=\"Perfil Social\" [(ngModel)]=\"newLink\" [ngModelOptions]=\"{standalone: true}\">\n        <button type=\"button\" (click)=\"addLink()\">Adicionar</button>\n        <div class=\"new-candidate__links\">\n            <div *ngFor=\"let link of getLinks()\">\n                {{link}}\n                <button (click)=\"removeLink(link)\">Remover</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"submit\">Cadastrar</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"menu\">\n    <li><a routerLink=\"/home\" routerLinkActive=\"active\">System</a></li>\n    <li><a routerLink=\"/jobs\" routerLinkActive=\"active\">Vagas</a></li>\n    <li><a routerLink=\"/skills\" routerLinkActive=\"active\">Competências</a></li>\n    <li><a routerLink=\"/candidates\" routerLinkActive=\"active\">Candidatos</a></li>\n    <li><a routerLink=\"/users\" routerLinkActive=\"active\">Configurações</a></li>\n</ul>","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { APIService } from '../api/api.service';\nimport { Evaluation } from '../model-interfaces/evaluation';\n\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\tevaluations: Evaluation[] = []\n\n\t\n\n\tngOnInit(): void {\n\t\t\n\t}\n\n}\n","<p>Home Works</p>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiModule } from '../api/api.module';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    ApiModule,\n    HomeRoutingModule\n  ],\n  exports: [HomeComponent],\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { APIService } from '../api/api.service';\nimport { toggleDisabledInputsAndSelect } from '../utils/utils';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css']\n})\nexport class JobsComponent implements OnInit {\n  jobForm: FormGroup;\n  departments: string[] = [];\n  jobs: JobOpportunity[] = [];\n  showButtonUpdateJobID: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService) { }\n\n  ngOnInit(): void {\n    this.apiService.get.departments().subscribe((departments: string[]) => this.departments = departments);\n    const job: JobOpportunity = { _id: null, name: '', stages: null, department: '', description: '' };\n    this.jobForm = this.formBuilder.group(job);\n    this.apiService.get.job_opportunities().subscribe((jobs: JobOpportunity[]) => this.jobs = jobs);\n  }\n  create(job: JobOpportunity) {\n    this.apiService.post.job_opportunity(job).subscribe(\n      (jobCreated: JobOpportunity) => {\n        this.jobs.push(jobCreated);\n        this.jobForm.reset();\n      },\n      error => console.log(error)\n    );\n  }\n  delete(job: JobOpportunity) {\n    debugger\n    this.apiService.delete.job_opportunity(job._id).subscribe(\n      response => {\n        if (response.status === 204) {\n          console.log('Vaga deletada com sucesso');\n          this.jobs = this.jobs.filter(j => !(j._id === job._id));\n        }\n      },\n      error => console.warn(error)\n    );\n  }\n  edit(job: JobOpportunity) {\n    toggleDisabledInputsAndSelect(job._id);\n    this.showButtonUpdateJobID = job._id;\n  }\n  update(job: JobOpportunity) {\n    this.apiService.update.job_opportunity(job).subscribe(\n      jobUpdated => {\n        toggleDisabledInputsAndSelect(job._id);\n        this.showButtonUpdateJobID = null;\n      },\n      error => console.log(error)\n    );\n  }\n}\n","\n<form class=\"new-job\" [formGroup]=\"jobForm\" (ngSubmit)=\"create(jobForm.value)\">\n    <div class=\"new-job__title\">Nova Vaga</div>\n    <input formControlName=\"name\" placeholder=\"Nome da Vaga\">\n    <input formControlName=\"description\" placeholder=\"Descrição da Vaga\">\n    <select formControlName=\"department\">\n        <option *ngFor=\"let department of departments\" [value]=\"department\">{{ department }}</option>\n    </select>\n    <button type=\"submit\">Cadastrar Vaga</button>\n</form>\n\n\n<div class=\"jobs\">\n    <span class=\"jobs__title\">Lista de Vagas</span>\n    <div class=\"job\" *ngFor=\"let job of jobs.reverse()\" [id]=\"job._id\">\n        <button (click)=\"delete(job)\">Deletar</button>\n        <input [(ngModel)]=\"job.name\" disabled/>\n        <input [(ngModel)]=\"job.description\" disabled/>\n        <select disabled [(ngModel)]=\"job.department\">\n            <option \n                *ngFor=\"let department of departments\" \n                [selected]=\"department === job.department\" \n                >\n                    {{ department }}\n            </option>\n        </select>\n        <button *ngIf=\"!(showButtonUpdateJobID === job._id); else updateButton\" (click)=\"edit(job)\"> Editar </button>\n        <ng-template #updateButton>\n            <button (click)=\"update(job)\"> Atualizar </button>\n        </ng-template>\n        <app-stages [job]=\"job\"></app-stages>\n    </div>\n</div>","import { Component, OnInit, SimpleChanges, Output, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { APIService } from 'src/app/api/api.service';\nimport { Stage } from 'src/app/model-interfaces/stage';\nimport { Skill } from 'src/app/model-interfaces/skill';\nimport { JobOpportunity } from 'src/app/model-interfaces/job-opportunity';\nimport { toggleDisabledInputsAndSelect } from 'src/app/utils/utils';\n\n@Component({\n  selector: 'app-stages',\n  templateUrl: './stages.component.html',\n  styleUrls: ['./stages.component.css']\n})\nexport class StagesComponent implements OnInit {\n\n  @Input() job: JobOpportunity;\n  stageForm: FormGroup;\n  skills: Skill[] = [];\n  showAddStage: boolean = false;\n  showButtonUpdateStageID: string = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService,\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.job)\n      throw new Error('StagesComponent : there are properties that have not been loaded.');\n    this.apiService.get.all_skills().subscribe((skills: Skill[]) => this.skills = skills);\n    const stage: Stage = { _id: null, name: '', description: '', skills: null };\n    this.stageForm = this.formBuilder.group(stage);\n  }\n\n  toggleAddStage = () => this.showAddStage = !this.showAddStage;\n\n  addStage(stageData: Stage) {\n    this.apiService.add_estages_to_job_opportunity(stageData, this.job._id).subscribe(\n      (jobStages: Stage[]) => {\n        this.job.stages = jobStages;\n        this.stageForm.reset();\n        console.log(this.job.stages);\n      },\n      error => console.log(error)\n    );\n    this.job.stages.push(stageData);\n  }\n  delete(stage: Stage) {\n    this.apiService.delete.stage(stage._id).subscribe(\n      response => {\n        if (response.status === 204) {\n          console.log('Etapa deletada com sucesso');\n          this.job.stages = this.job.stages.filter(s => !(s._id === stage._id));\n        }\n      },\n      error => console.warn(error)\n    );\n  }\n  edit(stage: Stage) {\n    toggleDisabledInputsAndSelect(stage._id);\n    this.showButtonUpdateStageID = stage._id;\n  }\n  update(stage: Stage) {\n    this.apiService.update.stage(stage).subscribe(\n      (stageUpdated: Stage) => {\n        stage = stageUpdated;\n        toggleDisabledInputsAndSelect(stage._id);\n        this.showButtonUpdateStageID = null;\n      },\n      error => console.log(error)\n    );\n  }\n  // getValuesOfSkills(skills: Skill[]): string[]{\n  //   debugger\n  //   const result: string[] = [];\n  //   skills.map(skill => result.push(skill.name));\n  //   return result;\n  // }\n  // skillsContainsID(id: string, skills: Skill[]): boolean {\n  //   debugger\n  //   const skillsID: string[] = [];\n  //   skills.map(skill => skillsID.push(skill._id));\n  //   return skillsID.includes(id);\n  // }\n}\n","<!-- \n<div class=\"stages\">\n    <div class=\"stages__title\">\n        Etapas\n    </div>\n    <div>\n        <app-stage (addEventEmitter)=\"addStage($event)\"></app-stage>\n    </div>>\n    <div class=\"stages__list\"></div>\n</div> -->\n\n<div class=\"stages\">\n    <button class=\"stages__title\" (click)=\"toggleAddStage()\">Nova Etapa</button>\n    <form *ngIf=\"showAddStage\" class=\"stages__new-stage\" [formGroup]=\"stageForm\" (ngSubmit)=\"addStage(stageForm.value)\">\n        <input type=\"text\" formControlName=\"name\" placeholder=\"Nome\">\n        <input type=\"text\" formControlName=\"description\" placeholder=\"Descrição\">\n        <select formControlName=\"skills\" multiple>\n            <option *ngFor=\"let skill of skills\" [value]=\"skill._id\">{{ skill.name }}</option>\n        </select>\n        <!-- <app-multi-select formControlName=\"skills\" label=\"Competências\" [list]=\"skills\"></app-multi-select> -->\n        <button class=\"button\" type=\"submit\">Adiccionar Etapa</button>\n    </form>\n    <div *ngIf=\"job.stages?.length\" class=\"stages__list\">\n        <div class=\"stages__title\">Lista de Etapas</div>\n        <div class=\"stage\" *ngFor=\"let stage of job.stages.reverse()\" [id]=\"stage._id\">\n            <!-- <div>{{ stage.name }}</div>\n            <div>{{ stage.description }}</div>\n            <div class=\"stage__skills\">\n                <div *ngFor=\"let skill of stage.skills\">{{ skill.name }}</div>   \n            </div> -->\n\n            <button (click)=\"delete(stage)\">Deletar</button>\n            <input [(ngModel)]=\"stage.name\" disabled/>\n            <input [(ngModel)]=\"stage.description\" disabled/>\n            <div *ngIf=\"!(showButtonUpdateStageID === stage._id); else selectSkills\" class=\"stage__skills\">\n                <div *ngFor=\"let skill of stage.skills\">{{ skill.name }}</div>   \n            </div>\n            <ng-template #selectSkills>\n                <select [(ngModel)]=\"stage.skills\" multiple>\n                    <option *ngFor=\"let skill of skills\" [value]=\"skill._id\">{{ skill.name }}</option>\n                </select>\n            </ng-template>\n            <!-- <app-multi-select label=\"Competências\" [list]=\"getValuesOfSkills(stage.skills)\"></app-multi-select> -->\n            <button *ngIf=\"!(showButtonUpdateStageID === stage._id); else updateButton\" (click)=\"edit(stage)\"> Editar </button>\n            <ng-template #updateButton>\n                <button (click)=\"update(stage)\"> Atualizar </button>\n            </ng-template>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Skill } from '../model-interfaces/skill';\nimport { APIService } from '../api/api.service';\nimport { toggleDisabledInputsAndSelect } from '../utils/utils';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent implements OnInit {\n  skillForm: FormGroup;\n  skills: Skill[] = [];\n  showButtonUpdateSkillID: string = null;\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService\n  ) { }\n\n  ngOnInit(): void {\n    this.apiService.get.all_skills().subscribe((skills: Skill[]) => this.skills = skills);\n    const newSkill: Skill = { _id: null, name: '', description: '' };\n    this.skillForm = this.formBuilder.group(newSkill);\n  }\n  create(skill: Skill){\n    this.apiService.post.skill(skill).subscribe(\n      (skillCreated: Skill) => {\n        this.skills.push(skillCreated);\n        this.skillForm.reset();\n      },\n      error => console.log(error)\n    );\n  }\n  delete(skill: Skill){\n    this.apiService.delete.skill(skill._id).subscribe(\n      response => {\n        if (response.status === 204) {\n          console.log('Competência deletada com sucesso');\n          this.skills = this.skills.filter(j => !(j._id === skill._id));\n        }\n      },\n      error => console.warn(error)\n    );\n  }\n  edit(skill: Skill){\n    toggleDisabledInputsAndSelect(skill._id);\n    this.showButtonUpdateSkillID = skill._id;\n  }\n  update(skill: Skill){\n    this.apiService.update.skill(skill).subscribe(\n      (skillUpdated: Skill) => {\n        toggleDisabledInputsAndSelect(skillUpdated._id);\n        this.showButtonUpdateSkillID = null;\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<form class=\"new-skill\" [formGroup]=\"skillForm\" (ngSubmit)=\"create(skillForm.value)\">\n    <div class=\"new-skill__title\">Adicionar Nova Competência</div>\n    <input formControlName=\"name\" placeholder=\"Nome da Competência\">\n    <input formControlName=\"description\" placeholder=\"Descrição da Competência\">\n    <button type=\"submit\">Cadastrar</button>\n</form>\n\n\n<div class=\"skills\">\n    <span class=\"skills__title\">Lista de Vagas</span>\n    <div class=\"skill\" *ngFor=\"let skill of skills.reverse()\" [id]=\"skill._id\">\n        <button (click)=\"delete(skill)\">Deletar</button>\n        <input [(ngModel)]=\"skill.name\" disabled/>\n        <input [(ngModel)]=\"skill.description\" disabled/>\n        <button *ngIf=\"!(showButtonUpdateSkillID === skill._id); else updateButton\" (click)=\"edit(skill)\"> Editar </button>\n        <ng-template #updateButton>\n            <button (click)=\"update(skill)\">Atualizar</button>\n        </ng-template>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { APIService } from '../api/api.service';\nimport { User } from '../model-interfaces/user';\n\n@Component({\n  selector: 'app-user-config',\n  templateUrl: './user-config.component.html',\n  styleUrls: ['./user-config.component.css']\n})\nexport class UserConfigComponent implements OnInit {\n\n  userForm: FormGroup;\n  evaluators;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService,\n  ) { }\n\n  ngOnInit(): void {\n    let properties = { username: '', password: '', department: '', role: '' };\n    this.userForm = this.formBuilder.group(properties);\n    this.apiService.user.evaluators().subscribe(data=> this.evaluators = data);\n    console.log(this.evaluators);\n  }\n  onSubmit(userData: User) {\n    this.apiService.user.create(userData).subscribe(\n      response => console.log(response),\n      error => console.log(error)\n    );\n  }\n\n}\n","<div class=\"user-info\">\n    <div>\n        <img src=\"https://rmtelefonia.com.br/wp-content/uploads/2015/11/Avatar-masculino.png\" alt=\"...\" class=\"rounded\">\n    </div>\n    <div class=\"user-details\">\n        <span>Nome de Usuário</span>\n        <span>Senha de Acesso</span>\n        <span>Departamento</span>\n        <span>Função</span>\n    </div>\n</div>\n\n<form class=\"user-config\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit(userForm.value)\">\n\n    <div>\n        <label for=\"username\">\n            Nome de Usuário\n        </label>\n        <input id=\"username\" type=\"text\" formControlName=\"username\">\n    </div>\n    \n    <div>\n        <label for=\"password\">\n            Senha de Acesso\n        </label>\n        <input id=\"password\" type=\"text\" formControlName=\"password\">\n    </div>\n    <div>\n        <label for=\"department\">\n            Departamento Responsável\n        </label>\n        <input id=\"department\" type=\"text\" formControlName=\"department\" value=\"SOFTWARE_DEVELOPMENT\">\n    </div>\n    <div>\n        <label for=\"role\">\n            Função\n        </label>\n        <input id=\"role\" type=\"text\" formControlName=\"role\">\n    </div>\n    \n    <button class=\"button\" type=\"submit\">Cadastrar</button>\n\n</form>\n\n\n<div class=\"user-list-title\">Lista de Usuários</div>\n<ul class=\"user-list\">\n    \n    <li><span>ID</span><span>Usuário</span><span>Departamento</span><span>Função</span></li>\n    <li *ngFor=\"let evaluator of evaluators\">\n        <span> 0 </span><span>{{ evaluator.username }}</span><span>{{ evaluator.department }} </span><span>{{ evaluator.role }} </span>\n    </li>\n</ul>\n\n","import { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { Stage } from '../model-interfaces/stage';\nimport { Skill } from '../model-interfaces/skill';\nimport { FormGroup } from '@angular/forms';\n\nexport const toggleDisabledInputsAndSelect = (idElement: string) => {\n  const element = document.getElementById(idElement);\n  element.childNodes.forEach(node => {\n    if (node.nodeName === 'INPUT' || node.nodeName === 'SELECT')\n      node['disabled'] = !node['disabled'];\n    else if (node.nodeName === 'DIV') {\n      if (node.childNodes.length) {\n        node.childNodes.forEach(n => {\n          if (n.nodeName === 'INPUT' || n.nodeName === 'SELECT')\n            n['disabled'] = !n['disabled'];\n        });\n      }\n    }\n\n  });\n}\n\nexport const hasPropertyWithValueNullOrEmpty = (object: Object, ...props: string[]): boolean => {\n  let result = false;\n  props.forEach(prop => {\n    if (!result) {\n      if (object.hasOwnProperty(prop)) {\n        const value = object[prop];\n        if (!value) result = true;\n        else if (Array.isArray(value) && !value[\"length\"]) result = true;\n      }\n    }\n  });\n  return result;\n}\n\nexport const builderObject = (object: Object, properties: string[]) => {\n  const invalid = hasPropertyWithValueNullOrEmpty(object, ...properties);\n  if (invalid) throw new Error(`Builder Object : the reported object contains properties with invalid values`);\n  return properties.reduce((newObject, prop) => {\n    newObject[prop] = object[prop];\n    return newObject;\n  }, {});\n}\n\nexport const fbGetValue = (form: FormGroup, key: string) => form.get(key).value;\nexport const fbSetValue = (form: FormGroup, key: string, value: any) => form.get(key).setValue(value);","export const ErrorMessages = {\n    authenticate: {\n        valid: \"Valid API access authorization\",\n        invalid: \"API access authorization failed ...\"\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}