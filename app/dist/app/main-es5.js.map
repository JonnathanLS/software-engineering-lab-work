{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular-material/angular-material.module.ts","webpack:///src/app/angular-material/menu/menu.component.ts","webpack:///src/app/angular-material/menu/menu.component.html","webpack:///src/app/angular-material/multi-select/multi-select.component.ts","webpack:///src/app/angular-material/multi-select/multi-select.component.html","webpack:///src/app/api/api-endpoint.ts","webpack:///src/app/api/api.interceptor.ts","webpack:///src/app/api/api.module.ts","webpack:///src/app/api/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication/authentication-guard.service.ts","webpack:///src/app/authentication/authentication.component.ts","webpack:///src/app/authentication/authentication.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication.service.ts","webpack:///src/app/candidates/candidate/associate-job/associate-job.component.ts","webpack:///src/app/candidates/candidate/associate-job/associate-job.component.html","webpack:///src/app/candidates/candidate/associate-job/stage-evaluator/stage-evaluator.component.ts","webpack:///src/app/candidates/candidate/associate-job/stage-evaluator/stage-evaluator.component.html","webpack:///src/app/candidates/candidate/candidate.component.ts","webpack:///src/app/candidates/candidate/candidate.component.html","webpack:///src/app/candidates/candidate/upload-file/upload-file.component.ts","webpack:///src/app/candidates/candidate/upload-file/upload-file.component.html","webpack:///src/app/candidates/candidates.component.ts","webpack:///src/app/candidates/candidates.component.html","webpack:///src/app/candidates/candidates.service.ts","webpack:///src/app/candidates/new-candidate/new-candidate.component.ts","webpack:///src/app/candidates/new-candidate/new-candidate.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/jobs/jobs.component.ts","webpack:///src/app/jobs/jobs.component.html","webpack:///src/app/jobs/stages/stages.component.ts","webpack:///src/app/jobs/stages/stages.component.html","webpack:///src/app/skills/skills.component.ts","webpack:///src/app/skills/skills.component.html","webpack:///src/app/user-config/user-config.component.ts","webpack:///src/app/user-config/user-config.component.html","webpack:///src/app/utils/utils.ts","webpack:///src/assets/error-messages.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","declarations","imports","MenuComponent","content","items","clicked","emitEvent","emit","selector","templateUrl","styleUrls","MultiSelectComponent","formSelect","console","log","label","list","HOST","PATH","JOBS","SKILLS","STAGES","CANDIDATES","USERS","DEPARTMENTS","EVALUATIONS","STAGES_PATH","JOBS_PATH","API","authenticate","departments","users","job_opportunities","skills","stages","candidates","evaluations","ApiInterceptor","authService","next","isAuthenticated","auth","getAuthorization","dupReq","clone","headers","set","handle","ApiModule","provide","useClass","multi","providers","json","object","JSON","stringify","APIService","httpClient","user","create","post","evaluators","get","job_opportunity","stages_of_job_opportunity","job_id","all_skills","skill_by_id","all_candidates","candidate","candidate_resume","candidate_id","evaluations_that_the_user_is_responsible","job_opportunity_by_evaluation","candidate_by_evaluation","skills_by_evaluation","candidate_curriculum","job","newValue","skill","file","empty","observe","evaluate","update","newData","name","description","department","put","_id","stage","add_estages_to_job_opportunity","newStage","associate_candidate_with_job_opportunity","associate","disassociate_candidate_with_job_opportunity","associate_id","providedIn","routes","path","redirectTo","pathMatch","component","canActivate","loadChildren","m","HomeModule","AppRoutingModule","forRoot","AppComponent","title","AppModule","bootstrap","AuthenticationGuardService","router","navigate","AuthenticationComponent","service","apiService","formBuilder","authForm","group","username","password","userData","role","response","error","onSubmit","AuthenticationModule","TOKEN","AuthenticationService","http","btoa","append","reject","subscribe","status","body","hasOwnProperty","sessionStorage","setItem","valid","invalid","getItem","AssociateJobComponent","candidatesService","selectJob","jobResult","jobs","map","associateJobForm","value","selectedJob","candidateId","jobOpportunityId","stageEvaluatorList","data","associateCreated","reset","StageEvaluatorComponent","addStageEvaluator","stageId","key","currentValues","form","evaluatorSelected","newStageEvaluator","evaluator","filter","stageEvaluator","reloadJobs","reloadEvaluators","CandidateComponent","candidateRemoved","uploadCandidate","newLink","hasCurriculum","curriculumActions","addLinkToCandidate","links","includes","push","removeLinkOfCandidate","url","link","curriculumClicked","action","curriculum","curriculumAdded","result","hasResume","warn","candidateUpdated","UploadFileComponent","uploadForm","event","target","files","length","setValue","FormData","onFileSelect","CandidatesComponent","addCandidate","removeCandidate","c","CandidatesService","getJobs","getEvaluators","NewCandidateComponent","candidateCreated","addLink","candidateForm","emitCandidateCreated","getLinks","removeLink","newLinks","newCandidate","cpf","address","jobOpportunities","HeaderComponent","HomeRoutingModule","forChild","HomeComponent","JobsComponent","jobForm","jobCreated","j","showButtonUpdateJobID","jobUpdated","StagesComponent","showAddStage","showButtonUpdateStageID","toggleAddStage","stageForm","stageData","jobStages","s","stageUpdated","SkillsComponent","showButtonUpdateSkillID","newSkill","skillForm","skillCreated","skillUpdated","UserConfigComponent","properties","userForm","toggleDisabledInputsAndSelect","idElement","element","document","getElementById","childNodes","forEach","node","nodeName","n","hasPropertyWithValueNullOrEmpty","props","prop","Array","isArray","builderObject","reduce","newObject","fbGetValue","fbSetValue","ErrorMessages","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { MultiSelectComponent } from './multi-select/multi-select.component';\nimport { MenuComponent } from './menu/menu.component';\n\n@NgModule({\n  declarations: [MultiSelectComponent, MenuComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatMenuModule\n  ],\n  exports: [MultiSelectComponent, MenuComponent]\n})\nexport class AngularMaterialModule { }\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @Input() content: string = '';\n  @Input() items: string[] = [];\n  @Output() clicked = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  emitEvent = (content: string) => this.clicked.emit(content);\n\n}\n","<button mat-button [matMenuTriggerFor]=\"menu\"> {{ content }} </button>\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item *ngFor=\"let item of items\" (click)=\"emitEvent(item)\">{{ item }}</button>\n</mat-menu>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-multi-select',\n  templateUrl: './multi-select.component.html',\n  styleUrls: ['./multi-select.component.css']\n})\nexport class MultiSelectComponent implements OnInit {\n\n  formSelect = new FormControl();\n\n  @Input() label: string;\n  @Input() list: any[];\n \n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.label, this.list)\n  }\n\n}\n","<mat-form-field appearance=\"fill\">\n    <mat-label>{{ label }}</mat-label>\n    <mat-select [formControl]=\"formSelect\" multiple>\n        <mat-select-trigger>\n            {{formSelect.value ? formSelect.value[0] : ''}}\n            <span *ngIf=\"formSelect.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{formSelect.value.length - 1}} {{formSelect.value?.length === 2 ? 'other' : 'others'}})\n            </span>\n        </mat-select-trigger>\n        <mat-option *ngFor=\"let val of list\" [value]=\"val\">{{val}}</mat-option>\n    </mat-select>\n</mat-form-field>\n    ","const HOST = \"https://software-engineering-lab-api.herokuapp.com\";\nconst PATH = {\n    JOBS: \"/job-opportunities/\",\n    SKILLS: \"/skills/\",\n    STAGES: \"/stages/\",\n    CANDIDATES: \"/candidates/\",\n    USERS: '/users/',\n    DEPARTMENTS: '/departments/',\n    EVALUATIONS: '/evaluations/'\n}\nexport const STAGES_PATH = PATH.STAGES;\nexport const JOBS_PATH = PATH.JOBS;\n\nexport const API = {\n    authenticate: HOST,\n    departments: `${HOST}${PATH.DEPARTMENTS}`,\n    users: `${HOST}${PATH.USERS}`,\n    job_opportunities: `${HOST}${PATH.JOBS}`,\n    skills: `${HOST}${PATH.SKILLS}`,\n    stages: `${HOST}${PATH.STAGES}`,\n    candidates: `${HOST}${PATH.CANDIDATES}`,\n    evaluations: `${HOST}${PATH.EVALUATIONS}`,\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n\tconstructor(private authService: AuthenticationService) {}\n\n\tintercept( req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tif (this.authService.isAuthenticated()){\n\t\t\tconst auth = this.authService.getAuthorization();\n\t\t\tconst dupReq = req.clone({ \n\t\t\t\theaders: req.headers\n\t\t\t\t\t.set('Authorization', \"Basic \" + auth)\n\t\t\t\t\t.set(\"Content-Type\", \"application/json\")\n\t\t\t});\n\t\t\treturn next.handle(dupReq);\n\t\t}\n\t\treturn next.handle(req);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ApiInterceptor } from './api.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [ \n    {provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true}\n  ]\n})\nexport class ApiModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { API, STAGES_PATH, JOBS_PATH } from './api-endpoint';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { Stage } from '../model-interfaces/stage';\nimport { Skill } from '../model-interfaces/skill';\nimport { Candidate } from '../model-interfaces/candidate';\nimport { User } from '../model-interfaces/user';\nimport { Evaluate } from '../model-interfaces/evaluate';\nimport { builderObject, hasPropertyWithValueNullOrEmpty } from '../utils/utils';\nimport { CandidateJobOpportunity } from '../model-interfaces/candidate-job-opportunity';\n\nconst json = (object: Object) => JSON.stringify(object);\n\n@Injectable({ providedIn: 'root' })\nexport class APIService {\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\t// delete = (data: any, interfaceName: string) => {\n\t// \tswitch (interfaceName) {\n\t// \t\tcase \"job\": return this.jobOpportunities.delete(data);\n\t// \t\tcase \"stage\": return this.stages.delete(data);\n\t// \t\tcase \"skill\": return this.skills.delete(data);\n\t// \t\tdefault: throw new Error(\"API Service DELETE : the interface name is not configured\");\n\t// \t}\n\t// }\n\n\tuser = {\n\t\tcreate: (user: User) => this.httpClient.post(API.users, json(user)),\n\t\tevaluators: () => this.httpClient.get(`${API.users}evaluators`),\n\t}\n\tget = {\n\t\t// Users\n\t\tevaluators: () => this.httpClient.get(`${API.users}evaluators`),\n\t\t// Departments\n\t\tdepartments: () => this.httpClient.get(API.departments),\n\t\t// Job Oppotunities\n\t\tjob_opportunities: () => this.httpClient.get(API.job_opportunities),\n\t\tjob_opportunity: (id: string) => this.httpClient.get(`${API.job_opportunities}${id}`),\n\t\tstages_of_job_opportunity: (job_id: Stage) => this.httpClient.get(`${API.job_opportunities}${job_id}${STAGES_PATH}`),\n\t\t// Skills\n\t\tall_skills: () => this.httpClient.get(API.skills),\n\t\tskill_by_id: (id: string) => this.httpClient.get(`${API.skills}${id}`),\n\t\t// Candidates\n\t\tall_candidates: () => this.httpClient.get(API.candidates),\n\t\tcandidate: (id: string) => this.httpClient.get(`${API.candidates}${id}`),\n\t\tcandidate_resume: (candidate_id: string) => this.httpClient.get(`${API.candidates}${candidate_id}/resume`),\n\n\t\tevaluations_that_the_user_is_responsible: () => this.httpClient.get(`${API.evaluations}`),\n\t\tjob_opportunity_by_evaluation: (id: string) => this.httpClient.get(`${API.evaluations}${id}/job-opportunity`),\n\t\tcandidate_by_evaluation: (id: string) => this.httpClient.get(`${API.evaluations}${id}/candidate`),\n\t\tskills_by_evaluation: (id: string) => this.httpClient.get(`${API.evaluations}${id}/skills`),\n\t\tcandidate_curriculum: (id: string) => this.httpClient.get(`${API.candidates}${id}/resume`)\n\t}\n\tpost = {\n\t\tuser: (user: User) => this.httpClient.post(API.users, json(user)),\n\t\tjob_opportunity: (job: JobOpportunity) => {\n\t\t\tconst newValue = builderObject(job, ['name', 'description', 'department']);\n\t\t\treturn this.httpClient.post(API.job_opportunities, json(newValue));\n\t\t},\n\t\tskill: (skill: Skill) => {\n\t\t\tconst newValue = builderObject(skill, ['name', 'description']);\n\t\t\treturn this.httpClient.post(API.skills, json(newValue));\n\t\t},\n\t\tcandidate: (candidate: Candidate) => {\n\t\t\tconst newValue = builderObject(candidate, ['name', 'cpf', 'address', 'links']);\n\t\t\treturn this.httpClient.post(API.candidates, json(newValue));\n\t\t},\n\t\tcandidate_curriculum: (candidate_id: string, file: FormData) => {\n\t\t\tdebugger\n\t\t\tconst empty = file.get('resume') === 'null';\n\t\t\tif (empty) throw new Error('You must attach a resume to the candidate!');\n\t\t\treturn this.httpClient.post(`${API.candidates}${candidate_id}/resume`, file, { observe: 'response' });\n\t\t},\n\t\tevaluate: (evaluate: Evaluate) => {\n\t\t\tconst newValue = builderObject(evaluate, ['stageEvaluator', 'skillScoreList']);\n\t\t\treturn this.httpClient.post(API.evaluations, json(newValue));\n\t\t}\n\n\t}\n\tupdate = {\n\t\tjob_opportunity: (job: JobOpportunity) => {\n\t\t\tconst newData = { name: job.name, description: job.description, department: job.department };\n\t\t\treturn this.httpClient.put(`${API.job_opportunities}${job._id}`, json(newData));\n\t\t},\n\t\tskill: (skill: Skill) => {\n\t\t\tconst newData = builderObject(skill, ['name', 'description']);\n\t\t\treturn this.httpClient.put(`${API.skills}${skill._id}`, json(skill));\n\t\t},\n\t\tstage: (stage: Stage) => {\n\t\t\tconst newData = builderObject(stage, ['name', 'description', 'skills']);\n\t\t\treturn this.httpClient.put(`${API.stages}${stage._id}`, json(newData))\n\t\t},\n\t\tcandidate: (candidate: Candidate) => {\n\t\t\tconst newData = builderObject(candidate, ['name', 'cpf', 'address', 'links']);\n\t\t\treturn this.httpClient.put(`${API.candidates}${candidate._id}`, json(newData))\n\t\t},\n\t}\n\tdelete = {\n\t\tjob_opportunity: (id: string) => this.httpClient.delete(`${API.job_opportunities}${id}`, { observe: 'response' }),\n\t\tskill: (id: string) => this.httpClient.delete(`${API.skills}${id}`, { observe: 'response' }),\n\t\tstage: (id: string) => this.httpClient.delete(`${API.stages}${id}`, { observe: 'response' }),\n\t\t// Candidates\n\t\tcandidate: (id: string) => this.httpClient.delete(`${API.candidates}${id}`, { observe: 'response' }),\n\t\tcandidate_curriculum: (id: string) => this.httpClient.delete(`${API.candidates}${id}/resume`, { observe: 'response' }),\n\t}\n\tadd_estages_to_job_opportunity = (stage: Stage, job_id: string) => {\n\t\tconst newStage = builderObject(stage, ['name', 'description', 'skills']);\n\t\treturn this.httpClient.post(`${API.job_opportunities}${job_id}${STAGES_PATH}`, json(newStage));\n\t}\n\tassociate_candidate_with_job_opportunity = (candidate_id: string, associate: CandidateJobOpportunity) => this.httpClient.post(`${API.candidates}${candidate_id}${JOBS_PATH}`, json(associate));\n\tdisassociate_candidate_with_job_opportunity = (associate_id: string) => this.httpClient.delete(`${API.candidates}job-opportunities/${associate_id}`);\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication/authentication.component';\nimport { AuthenticationGuardService } from './authentication/authentication-guard.service';\nimport { UserConfigComponent } from './user-config/user-config.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { CandidatesComponent } from './candidates/candidates.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'auth', pathMatch: 'full' },\n  { path: 'auth', component: AuthenticationComponent },\n  { \n    path: 'home', \n    canActivate: [AuthenticationGuardService],\n    loadChildren: () => import('./home/home.module').then(m => m.HomeModule)\n  },\n  { path: 'jobs', canActivate: [AuthenticationGuardService], component: JobsComponent },\n  { path: 'users', canActivate: [AuthenticationGuardService], component: UserConfigComponent },\n  { path: 'skills', canActivate: [AuthenticationGuardService], component: SkillsComponent },\n  { path: 'candidates', canActivate: [AuthenticationGuardService], component: CandidatesComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { UserConfigComponent } from './user-config/user-config.component';\nimport { HomeModule } from './home/home.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { StagesComponent } from './jobs/stages/stages.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { AngularMaterialModule } from './angular-material/angular-material.module';\nimport { CandidatesComponent } from './candidates/candidates.component';\nimport { NewCandidateComponent } from './candidates/new-candidate/new-candidate.component';\nimport { UploadFileComponent } from './candidates/candidate/upload-file/upload-file.component';\nimport { CandidateComponent } from './candidates/candidate/candidate.component';\nimport { StageEvaluatorComponent } from './candidates/candidate/associate-job/stage-evaluator/stage-evaluator.component';\nimport { AssociateJobComponent } from './candidates/candidate/associate-job/associate-job.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    StagesComponent,\n    JobsComponent,\n    UserConfigComponent,\n    SkillsComponent,\n    CandidatesComponent,\n    NewCandidateComponent,\n    UploadFileComponent,\n    CandidateComponent,\n    AssociateJobComponent,\n    StageEvaluatorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationModule,\n    HomeModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthenticationGuardService implements CanActivate {\n  constructor(public auth: AuthenticationService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['auth']);\n      return false;\n    }\n    return true;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport { User } from '../model-interfaces/user';\nimport { APIService } from '../api/api.service';\nimport { Stage } from '../model-interfaces/stage';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.css']\n})\nexport class AuthenticationComponent implements OnInit {\n\n  public authForm: FormGroup;\n\n  constructor(\n    private service: AuthenticationService,\n    private router: Router,\n    private apiService: APIService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.authForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n  }\n  onSubmit(userData) {\n    const user: User = { _id: '', username: userData.username, password: userData.password, department: null, role: null };\n    this.service\n      .authenticate(user)\n      .then(response => this.router.navigate(['/home']))\n      .catch(error => console.log(error));\n  }\n\n}\n","\n<form class=\"authentication\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit(authForm.value)\">\n    <input type=\"text\" formControlName=\"username\" placeholder=\"Usuário\">\n    <input type=\"password\" formControlName=\"password\" placeholder=\"Senha de Acesso\">\n    <button type=\"submit\">Acessar</button>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthenticationService } from './authentication.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiModule } from '../api/api.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthenticationGuardService } from './authentication-guard.service';\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ApiModule\n  ],\n  providers: [AuthenticationService, AuthenticationGuardService],\n  bootstrap: [AuthenticationComponent]\n})\nexport class AuthenticationModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../model-interfaces/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API } from '../api/api-endpoint';\nimport { ErrorMessages } from 'src/assets/error-messages';\n\nconst TOKEN = \"token\";\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tauthenticate = (user: User): Promise<string> => {\n\t\tif (!user.username) throw new Error('Authentication Service : authentication method requires a user to be informed.');\n\t\tif (!user.password) throw new Error('Authentication Service : authentication method requires the password to be informed.');\n\n\t\tconst auth = btoa(`${user.username}:${user.password}`);\n\n\t\tlet headers: HttpHeaders = new HttpHeaders();\n\n\t\theaders = headers.append(\"Authorization\", `Basic ${auth}`);\n\t\theaders = headers.append(\"Content-Type\", \"application/json\");\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.http.get(API.authenticate, { headers, observe: 'response' }).subscribe(\n\t\t\t\tresponse => {\n\t\t\t\t\tif (response.status === 200)\n\t\t\t\t\t\tif (response.body.hasOwnProperty(\"data\"))\n\t\t\t\t\t\t\tsessionStorage.setItem(TOKEN, auth);\n\t\t\t\t\tresolve(ErrorMessages.authenticate.valid);\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\treject(new Error(ErrorMessages.authenticate.invalid));\n\t\t\t\t}\n\t\t\t);\n\t\t})\n\n\t}\n\n\tisAuthenticated = (): boolean => !!sessionStorage.getItem(TOKEN);\n\tgetAuthorization = (): string => sessionStorage.getItem(TOKEN);\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { CandidatesService } from '../../candidates.service';\nimport { JobOpportunity } from 'src/app/model-interfaces/job-opportunity';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { CandidateJobOpportunity } from 'src/app/model-interfaces/candidate-job-opportunity';\nimport { fbGetValue, fbSetValue } from 'src/app/utils/utils';\nimport { APIService } from 'src/app/api/api.service';\n\n@Component({\n  selector: 'app-associate-job',\n  templateUrl: './associate-job.component.html',\n  styleUrls: ['./associate-job.component.css']\n})\nexport class AssociateJobComponent implements OnInit {\n\n  associateJobForm: FormGroup;\n  selectedJob: JobOpportunity;\n  @Input() candidateId: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private candidatesService: CandidatesService,\n    private apiService: APIService\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.candidateId)\n      throw new Error('AssociateJobComponent : there are properties that have not been loaded.');\n    const associate: CandidateJobOpportunity = { _id: null, jobOpportunityId: '', stageEvaluatorList: null };\n    this.associateJobForm = this.formBuilder.group(associate);\n    fbSetValue(this.associateJobForm, 'stageEvaluatorList', []);\n  }\n  selectJob = () => {\n    let jobResult: JobOpportunity;\n    this.candidatesService.jobs.map(job =>\n      job._id === this.associateJobForm.get('jobOpportunityId').value ? jobResult = job : null);\n    this.selectedJob = jobResult;\n  }\n  jobs = () => this.candidatesService.jobs;\n\n  associate(data: CandidateJobOpportunity) {\n    this.apiService.associate_candidate_with_job_opportunity(this.candidateId, data).subscribe(\n      (associateCreated: CandidateJobOpportunity) => {\n        console.log(associateCreated);\n        this.associateJobForm.reset();\n      },\n      error => console.error(error)\n    );\n  }\n}\n","<form class=\"associate-job\" [formGroup]=\"associateJobForm\" (ngSubmit)=\"associate(associateJobForm.value)\">\n  <div class=\"associate-job__title\">Associar Vaga</div>\n  <select type=\"text\" formControlName=\"jobOpportunityId\" (change)=\"selectJob()\">\n    <option *ngFor=\"let job of jobs()\" [value]=\"job._id\">{{ job.name }}</option>\n  </select>\n  <div class=\"associate-job__stages\">\n    <app-stage-evaluator *ngFor=\"let stage of selectedJob?.stages\" [form]=\"associateJobForm\" [stage]=\"stage\"></app-stage-evaluator>\n  </div>\n  <button type=\"submit\">Associar</button>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Stage } from 'src/app/model-interfaces/stage';\nimport { CandidatesService } from 'src/app/candidates/candidates.service';\nimport { StageEvaluator } from 'src/app/model-interfaces/stage-evaluator';\nimport { fbGetValue, fbSetValue } from 'src/app/utils/utils';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-stage-evaluator',\n  templateUrl: './stage-evaluator.component.html',\n  styleUrls: ['./stage-evaluator.component.css']\n})\nexport class StageEvaluatorComponent implements OnInit {\n\n  @Input() stage: Stage;\n  @Input() form: FormGroup;\n  evaluatorSelected: string;\n  constructor(\n    private candidatesService: CandidatesService\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.stage || !this.form)\n      throw new Error('StageEvaluatorComponent : there are properties that have not been loaded.');\n    this.candidatesService.reloadJobs();\n    this.candidatesService.reloadEvaluators();\n    this.evaluatorSelected = null;\n  }\n  evaluators = () => this.candidatesService.evaluators;\n  addStageEvaluator = (stageId: string) => {\n    const key: string = 'stageEvaluatorList';\n    let currentValues: StageEvaluator[] = fbGetValue(this.form, key);\n    if (this.evaluatorSelected) {\n      const newStageEvaluator: StageEvaluator = { stage: stageId, evaluator: this.evaluatorSelected };\n      currentValues = currentValues.filter(stageEvaluator => stageEvaluator.stage !== stageId);\n      fbSetValue(this.form, key, [...currentValues, newStageEvaluator]);\n    }\n  }\n}\n","<div class=\"stage-evaluator\">\n  <p>{{ stage.name }}</p>\n  <select type=\"text\" [(ngModel)]=\"evaluatorSelected\" [ngModelOptions]=\"{standalone: true}\"\n    (change)=\"addStageEvaluator(stage._id)\">\n    <option *ngFor=\"let evaluator of evaluators()\" [value]=\"evaluator._id\">{{ evaluator.username }}</option>\n  </select>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Candidate } from 'src/app/model-interfaces/candidate';\nimport { APIService } from 'src/app/api/api.service';\nimport { toggleDisabledInputsAndSelect } from 'src/app/utils/utils';\n\n@Component({\n\tselector: 'app-candidate',\n\ttemplateUrl: './candidate.component.html',\n\tstyleUrls: ['./candidate.component.css']\n})\nexport class CandidateComponent implements OnInit {\n\n\t@Input() candidate: Candidate;\n\t@Output() candidateRemoved = new EventEmitter();\n\n\tuploadCandidate = false;\n\tnewLink: string = '';\n\thasCurriculum = true;\n\tcurriculumActions: string[] = ['download', 'delete'];\n\n\t// associatedJobs: Job\n\tconstructor(\n\t\tprivate apiService: APIService\n\t) { }\n\n\tngOnInit(): void {\n\t\tif (!this.candidate)\n\t\t\tthrow new Error('CandidateComponent : there are properties that have not been loaded.');\n\t\tthis.hasCurriculum = this.candidate.hasResume;\n\t}\n\tdelete() {\n\t\tthis.apiService.delete.candidate(this.candidate._id).subscribe(\n\t\t\tresponse => {\n\t\t\t\tif (response.status === 204) {\n\t\t\t\t\tconsole.log('Candidato deletado com sucesso');\n\t\t\t\t\tthis.candidateRemoved.emit(this.candidate._id);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => console.warn(error)\n\t\t);\n\t}\n\tedit() {\n\t\ttoggleDisabledInputsAndSelect(this.candidate._id);\n\t\tthis.uploadCandidate = true;\n\t}\n\tupdate() {\n\t\tthis.apiService.update.candidate(this.candidate).subscribe(\n\t\t\t(candidateUpdated: Candidate) => {\n\t\t\t\ttoggleDisabledInputsAndSelect(candidateUpdated._id);\n\t\t\t\tthis.uploadCandidate = false;\n\t\t\t},\n\t\t\terror => console.log(error)\n\t\t);\n\t}\n\n\taddLinkToCandidate = () => {\n\t\tif (this.newLink && !this.candidate.links.includes(this.newLink)) {\n\t\t\tthis.candidate.links.push(this.newLink);\n\t\t\tthis.newLink = '';\n\t\t}\n\t}\n\tremoveLinkOfCandidate = (url: string) =>\n\t\tthis.candidate.links = this.candidate.links.filter(link => !(link === url));\n\n\tcurriculumClicked = (action: 'download' | 'delete') => {\n\t\tdebugger\n\t\tif (action === 'download') {\n\t\t\tthis.apiService.get.candidate_curriculum(this.candidate._id).subscribe(\n\t\t\t\tcurriculum => {\n\t\t\t\t\tconsole.log(curriculum);\n\t\t\t\t},\n\t\t\t\terror => console.error(error)\n\t\t\t);\n\t\t}\n\t\telse this.apiService.delete.candidate_curriculum(this.candidate._id).subscribe(\n\t\t\tresponse => {\n\t\t\t\tif (response.status === 204) {\n\t\t\t\t\tconsole.log('Currículo deletado com sucesso');\n\t\t\t\t\tthis.hasCurriculum = false;\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => console.error(error)\n\t\t);\n\t}\n\tcurriculumAdded = (result: boolean) => this.hasCurriculum = result;\n\n}\n","<div class=\"candidate\" [id]=\"candidate._id\">\n    <app-menu *ngIf=\"hasCurriculum; else uploadCurriculo\" content=\"Currículo\" [items]=\"curriculumActions\" (clicked)=\"curriculumClicked($event)\"></app-menu>\n    <ng-template #uploadCurriculo>\n        <app-upload-file [candidateId]=\"candidate._id\" (curriculumAdded)=\"curriculumAdded($event)\"></app-upload-file>\n    </ng-template>\n    <input [(ngModel)]=\"candidate.name\" disabled/>\n    <input [(ngModel)]=\"candidate.cpf\" disabled/>\n    <input [(ngModel)]=\"candidate.address\" disabled/>\n    <div class=\"candidate-links-content\">\n        <div *ngIf=\"uploadCandidate\" class=\"candidate__new-link\">\n            <input placeholder=\"Perfil Social\" [(ngModel)]=\"newLink\" [ngModelOptions]=\"{standalone: true}\">\n            <button type=\"button\" (click)=\"addLinkToCandidate()\">Adicionar</button>\n        </div>\n        <div class=\"candidate__links\">\n            <div *ngFor=\"let link of candidate.links\">\n                {{link}}\n                <button *ngIf=\"uploadCandidate\" (click)=\"removeLinkOfCandidate(link)\">Remover</button>\n            </div>\n        </div>\n    </div>\n    <button *ngIf=\"!uploadCandidate; else updateCandidate\" (click)=\"edit()\"> Editar </button>\n    <ng-template #updateCandidate>\n        <button (click)=\"update()\"> Atualizar </button>\n    </ng-template>\n    <app-associate-job [candidateId]=\"candidate._id\"></app-associate-job>\n    <div candidate-job-opportunities>\n\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { APIService } from 'src/app/api/api.service';\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.css']\n})\nexport class UploadFileComponent implements OnInit {\n  uploadForm: FormGroup;\n  @Input() candidateId: string;\n  @Output() curriculumAdded = new EventEmitter<boolean>();\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService\n  ) { }\n\n  ngOnInit(): void {\n    this.uploadForm = this.formBuilder.group({ file: null });\n  }\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadForm.get('file').setValue(file);\n    }\n  }\n  onSubmit() {\n    const file = new FormData();\n    file.append('resume', this.uploadForm.get('file').value);\n    this.apiService.post.candidate_curriculum(this.candidateId, file).subscribe(\n      response => {\n        if (response.status === 201) {\n          console.log('Currículo carregado com sucesso');\n          this.curriculumAdded.emit(true);\n        }\n      },\n      error => console.error(error)\n    );\n  }\n}\n\n","<form class=\"upload-file\" [formGroup]=\"uploadForm\" (ngSubmit)=\"onSubmit()\">      \n        <input type=\"file\" name=\"file\" (change)=\"onFileSelect($event)\" accept=\"application/pdf\"/>\n        <button type=\"submit\">Enviar</button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { APIService } from '../api/api.service';\nimport { Candidate } from '../model-interfaces/candidate';\nimport { toggleDisabledInputsAndSelect } from '../utils/utils';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\n\n@Component({\n\tselector: 'app-candidates',\n\ttemplateUrl: './candidates.component.html',\n\tstyleUrls: ['./candidates.component.css']\n})\nexport class CandidatesComponent implements OnInit {\n\tcandidates: Candidate[] = [];\n\tcurrentCandidate: string;\n\tnewLink: string;\n\tjobs: JobOpportunity[] = [];\n\n\tconstructor(\n\t\tprivate apiService: APIService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.apiService.get.all_candidates().subscribe(\n\t\t\t(candidates: Candidate[]) => this.candidates = candidates,\n\t\t\t(error) => console.log(error)\n\t\t);\n\t}\n\taddCandidate = (candidate: Candidate) => this.candidates.push(candidate);\n\tremoveCandidate = (id: string) => this.candidates = this.candidates.filter(c => !(c._id === id));\n\n}\n","<app-new-candidate (candidateCreated)=\"addCandidate($event)\"></app-new-candidate>\n<div class=\"candidates\">\n    <app-candidate \n        *ngFor=\"let candidate of candidates\"\n        [candidate]=\"candidate\" \n        (candidateRemoved)=\"removeCandidate($event)\">\n    </app-candidate>\n</div>","import { Injectable } from '@angular/core';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { APIService } from '../api/api.service';\nimport { User } from '../model-interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidatesService {\n  jobs: JobOpportunity[] = [];\n  evaluators: User[] = [];\n  constructor(\n    private apiService: APIService,\n  ) {\n    this.getJobs();\n    this.getEvaluators();\n  }\n  private getJobs = () => this.apiService.get.job_opportunities().subscribe(\n    (jobs: JobOpportunity[]) => this.jobs = jobs,\n    error => console.log(error)\n  );\n  reloadJobs = () => this.getJobs();\n  getEvaluators = () => this.apiService.get.evaluators().subscribe(\n    (evaluators: User[]) => this.evaluators = evaluators,\n    error => console.log(error)\n  );\n  reloadEvaluators = () => this.getEvaluators();\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Candidate } from 'src/app/model-interfaces/candidate';\nimport { APIService } from 'src/app/api/api.service';\nimport { fbSetValue, fbGetValue } from 'src/app/utils/utils';\n\n@Component({\n  selector: 'app-new-candidate',\n  templateUrl: './new-candidate.component.html',\n  styleUrls: ['./new-candidate.component.css']\n})\nexport class NewCandidateComponent implements OnInit {\n  newLink: string;\n  candidateForm: FormGroup;\n\n  @Output() candidateCreated = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private apiService: APIService) { }\n\n  ngOnInit(): void {\n    const newCandidate: Candidate = { _id: null, name: '', cpf: '', address: '', links: null, curriculum: null, jobOpportunities: null, hasResume: null };\n    this.candidateForm = this.formBuilder.group(newCandidate);\n    fbSetValue(this.candidateForm, 'links', []);\n  }\n\n  addLink = () => {\n    const links: string[] = fbGetValue(this.candidateForm, 'links');\n    if (this.newLink && !links.includes(this.newLink)) {\n      fbSetValue(this.candidateForm, 'links', [...links, this.newLink]);\n      this.newLink = '';\n    }\n  };\n  create(candidate: Candidate) {\n    this.apiService.post.candidate(candidate).subscribe(\n      (candidateCreated: Candidate) => {\n        this.emitCandidateCreated(candidateCreated);\n        this.candidateForm.reset();\n      },\n      error => console.error(error)\n    );\n  }\n  emitCandidateCreated = (candidate: Candidate) => this.candidateCreated.emit(candidate);\n  getLinks = () => fbGetValue(this.candidateForm, 'links');\n  removeLink = (url: string) => {\n    const newLinks: string[] = fbGetValue(this.candidateForm, 'links').filter(link => !(link === url));\n    fbSetValue(this.candidateForm, 'links', newLinks);\n  }\n}\n","<form class=\"new-candidate\" [formGroup]=\"candidateForm\" (ngSubmit)=\"create(candidateForm.value)\">\n    <div class=\"new-candidate__title\">Novo Candidato</div>\n    <input formControlName=\"name\" placeholder=\"Nome\">\n    <input formControlName=\"cpf\" maxlength=\"11\" placeholder=\"CPF\">\n    <input formControlName=\"address\" placeholder=\"Endereço\">\n    <div class=\"new-candidate__new-link\">\n        <input placeholder=\"Perfil Social\" [(ngModel)]=\"newLink\" [ngModelOptions]=\"{standalone: true}\">\n        <button type=\"button\" (click)=\"addLink()\">Adicionar</button>\n        <div class=\"new-candidate__links\">\n            <div *ngFor=\"let link of getLinks()\">\n                {{link}}\n                <button (click)=\"removeLink(link)\">Remover</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"submit\">Cadastrar</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"menu\">\n    <li><a routerLink=\"/home\" routerLinkActive=\"active\">System</a></li>\n    <li><a routerLink=\"/jobs\" routerLinkActive=\"active\">Vagas</a></li>\n    <li><a routerLink=\"/skills\" routerLinkActive=\"active\">Competências</a></li>\n    <li><a routerLink=\"/candidates\" routerLinkActive=\"active\">Candidatos</a></li>\n    <li><a routerLink=\"/users\" routerLinkActive=\"active\">Configurações</a></li>\n</ul>","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { APIService } from '../api/api.service';\nimport { Evaluation } from '../model-interfaces/evaluation';\n\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\tevaluations: Evaluation[] = []\n\n\t\n\n\tngOnInit(): void {\n\t\t\n\t}\n\n}\n","<p>Home Works</p>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiModule } from '../api/api.module';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    ApiModule,\n    HomeRoutingModule\n  ],\n  exports: [HomeComponent],\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { APIService } from '../api/api.service';\nimport { toggleDisabledInputsAndSelect } from '../utils/utils';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css']\n})\nexport class JobsComponent implements OnInit {\n  jobForm: FormGroup;\n  departments: string[] = [];\n  jobs: JobOpportunity[] = [];\n  showButtonUpdateJobID: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService) { }\n\n  ngOnInit(): void {\n    this.apiService.get.departments().subscribe((departments: string[]) => this.departments = departments);\n    const job: JobOpportunity = { _id: null, name: '', stages: null, department: '', description: '' };\n    this.jobForm = this.formBuilder.group(job);\n    this.apiService.get.job_opportunities().subscribe((jobs: JobOpportunity[]) => this.jobs = jobs);\n  }\n  create(job: JobOpportunity) {\n    this.apiService.post.job_opportunity(job).subscribe(\n      (jobCreated: JobOpportunity) => {\n        this.jobs.push(jobCreated);\n        this.jobForm.reset();\n      },\n      error => console.log(error)\n    );\n  }\n  delete(job: JobOpportunity) {\n    debugger\n    this.apiService.delete.job_opportunity(job._id).subscribe(\n      response => {\n        if (response.status === 204) {\n          console.log('Vaga deletada com sucesso');\n          this.jobs = this.jobs.filter(j => !(j._id === job._id));\n        }\n      },\n      error => console.warn(error)\n    );\n  }\n  edit(job: JobOpportunity) {\n    toggleDisabledInputsAndSelect(job._id);\n    this.showButtonUpdateJobID = job._id;\n  }\n  update(job: JobOpportunity) {\n    this.apiService.update.job_opportunity(job).subscribe(\n      jobUpdated => {\n        toggleDisabledInputsAndSelect(job._id);\n        this.showButtonUpdateJobID = null;\n      },\n      error => console.log(error)\n    );\n  }\n}\n","\n<form class=\"new-job\" [formGroup]=\"jobForm\" (ngSubmit)=\"create(jobForm.value)\">\n    <div class=\"new-job__title\">Nova Vaga</div>\n    <input formControlName=\"name\" placeholder=\"Nome da Vaga\">\n    <input formControlName=\"description\" placeholder=\"Descrição da Vaga\">\n    <select formControlName=\"department\">\n        <option *ngFor=\"let department of departments\" [value]=\"department\">{{ department }}</option>\n    </select>\n    <button type=\"submit\">Cadastrar Vaga</button>\n</form>\n\n\n<div class=\"jobs\">\n    <span class=\"jobs__title\">Lista de Vagas</span>\n    <div class=\"job\" *ngFor=\"let job of jobs.reverse()\" [id]=\"job._id\">\n        <button (click)=\"delete(job)\">Deletar</button>\n        <input [(ngModel)]=\"job.name\" disabled/>\n        <input [(ngModel)]=\"job.description\" disabled/>\n        <select disabled [(ngModel)]=\"job.department\">\n            <option \n                *ngFor=\"let department of departments\" \n                [selected]=\"department === job.department\" \n                >\n                    {{ department }}\n            </option>\n        </select>\n        <button *ngIf=\"!(showButtonUpdateJobID === job._id); else updateButton\" (click)=\"edit(job)\"> Editar </button>\n        <ng-template #updateButton>\n            <button (click)=\"update(job)\"> Atualizar </button>\n        </ng-template>\n        <app-stages [job]=\"job\"></app-stages>\n    </div>\n</div>","import { Component, OnInit, SimpleChanges, Output, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { APIService } from 'src/app/api/api.service';\nimport { Stage } from 'src/app/model-interfaces/stage';\nimport { Skill } from 'src/app/model-interfaces/skill';\nimport { JobOpportunity } from 'src/app/model-interfaces/job-opportunity';\nimport { toggleDisabledInputsAndSelect } from 'src/app/utils/utils';\n\n@Component({\n  selector: 'app-stages',\n  templateUrl: './stages.component.html',\n  styleUrls: ['./stages.component.css']\n})\nexport class StagesComponent implements OnInit {\n\n  @Input() job: JobOpportunity;\n  stageForm: FormGroup;\n  skills: Skill[] = [];\n  showAddStage: boolean = false;\n  showButtonUpdateStageID: string = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService,\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.job)\n      throw new Error('StagesComponent : there are properties that have not been loaded.');\n    this.apiService.get.all_skills().subscribe((skills: Skill[]) => this.skills = skills);\n    const stage: Stage = { _id: null, name: '', description: '', skills: null };\n    this.stageForm = this.formBuilder.group(stage);\n  }\n\n  toggleAddStage = () => this.showAddStage = !this.showAddStage;\n\n  addStage(stageData: Stage) {\n    this.apiService.add_estages_to_job_opportunity(stageData, this.job._id).subscribe(\n      (jobStages: Stage[]) => {\n        this.job.stages = jobStages;\n        this.stageForm.reset();\n        console.log(this.job.stages);\n      },\n      error => console.log(error)\n    );\n    this.job.stages.push(stageData);\n  }\n  delete(stage: Stage) {\n    this.apiService.delete.stage(stage._id).subscribe(\n      response => {\n        if (response.status === 204) {\n          console.log('Etapa deletada com sucesso');\n          this.job.stages = this.job.stages.filter(s => !(s._id === stage._id));\n        }\n      },\n      error => console.warn(error)\n    );\n  }\n  edit(stage: Stage) {\n    toggleDisabledInputsAndSelect(stage._id);\n    this.showButtonUpdateStageID = stage._id;\n  }\n  update(stage: Stage) {\n    this.apiService.update.stage(stage).subscribe(\n      (stageUpdated: Stage) => {\n        stage = stageUpdated;\n        toggleDisabledInputsAndSelect(stage._id);\n        this.showButtonUpdateStageID = null;\n      },\n      error => console.log(error)\n    );\n  }\n  // getValuesOfSkills(skills: Skill[]): string[]{\n  //   debugger\n  //   const result: string[] = [];\n  //   skills.map(skill => result.push(skill.name));\n  //   return result;\n  // }\n  // skillsContainsID(id: string, skills: Skill[]): boolean {\n  //   debugger\n  //   const skillsID: string[] = [];\n  //   skills.map(skill => skillsID.push(skill._id));\n  //   return skillsID.includes(id);\n  // }\n}\n","<!-- \n<div class=\"stages\">\n    <div class=\"stages__title\">\n        Etapas\n    </div>\n    <div>\n        <app-stage (addEventEmitter)=\"addStage($event)\"></app-stage>\n    </div>>\n    <div class=\"stages__list\"></div>\n</div> -->\n\n<div class=\"stages\">\n    <button class=\"stages__title\" (click)=\"toggleAddStage()\">Nova Etapa</button>\n    <form *ngIf=\"showAddStage\" class=\"stages__new-stage\" [formGroup]=\"stageForm\" (ngSubmit)=\"addStage(stageForm.value)\">\n        <input type=\"text\" formControlName=\"name\" placeholder=\"Nome\">\n        <input type=\"text\" formControlName=\"description\" placeholder=\"Descrição\">\n        <select formControlName=\"skills\" multiple>\n            <option *ngFor=\"let skill of skills\" [value]=\"skill._id\">{{ skill.name }}</option>\n        </select>\n        <!-- <app-multi-select formControlName=\"skills\" label=\"Competências\" [list]=\"skills\"></app-multi-select> -->\n        <button class=\"button\" type=\"submit\">Adiccionar Etapa</button>\n    </form>\n    <div *ngIf=\"job.stages?.length\" class=\"stages__list\">\n        <div class=\"stages__title\">Lista de Etapas</div>\n        <div class=\"stage\" *ngFor=\"let stage of job.stages.reverse()\" [id]=\"stage._id\">\n            <!-- <div>{{ stage.name }}</div>\n            <div>{{ stage.description }}</div>\n            <div class=\"stage__skills\">\n                <div *ngFor=\"let skill of stage.skills\">{{ skill.name }}</div>   \n            </div> -->\n\n            <button (click)=\"delete(stage)\">Deletar</button>\n            <input [(ngModel)]=\"stage.name\" disabled/>\n            <input [(ngModel)]=\"stage.description\" disabled/>\n            <div *ngIf=\"!(showButtonUpdateStageID === stage._id); else selectSkills\" class=\"stage__skills\">\n                <div *ngFor=\"let skill of stage.skills\">{{ skill.name }}</div>   \n            </div>\n            <ng-template #selectSkills>\n                <select [(ngModel)]=\"stage.skills\" multiple>\n                    <option *ngFor=\"let skill of skills\" [value]=\"skill._id\">{{ skill.name }}</option>\n                </select>\n            </ng-template>\n            <!-- <app-multi-select label=\"Competências\" [list]=\"getValuesOfSkills(stage.skills)\"></app-multi-select> -->\n            <button *ngIf=\"!(showButtonUpdateStageID === stage._id); else updateButton\" (click)=\"edit(stage)\"> Editar </button>\n            <ng-template #updateButton>\n                <button (click)=\"update(stage)\"> Atualizar </button>\n            </ng-template>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Skill } from '../model-interfaces/skill';\nimport { APIService } from '../api/api.service';\nimport { toggleDisabledInputsAndSelect } from '../utils/utils';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent implements OnInit {\n  skillForm: FormGroup;\n  skills: Skill[] = [];\n  showButtonUpdateSkillID: string = null;\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService\n  ) { }\n\n  ngOnInit(): void {\n    this.apiService.get.all_skills().subscribe((skills: Skill[]) => this.skills = skills);\n    const newSkill: Skill = { _id: null, name: '', description: '' };\n    this.skillForm = this.formBuilder.group(newSkill);\n  }\n  create(skill: Skill){\n    this.apiService.post.skill(skill).subscribe(\n      (skillCreated: Skill) => {\n        this.skills.push(skillCreated);\n        this.skillForm.reset();\n      },\n      error => console.log(error)\n    );\n  }\n  delete(skill: Skill){\n    this.apiService.delete.skill(skill._id).subscribe(\n      response => {\n        if (response.status === 204) {\n          console.log('Competência deletada com sucesso');\n          this.skills = this.skills.filter(j => !(j._id === skill._id));\n        }\n      },\n      error => console.warn(error)\n    );\n  }\n  edit(skill: Skill){\n    toggleDisabledInputsAndSelect(skill._id);\n    this.showButtonUpdateSkillID = skill._id;\n  }\n  update(skill: Skill){\n    this.apiService.update.skill(skill).subscribe(\n      (skillUpdated: Skill) => {\n        toggleDisabledInputsAndSelect(skillUpdated._id);\n        this.showButtonUpdateSkillID = null;\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<form class=\"new-skill\" [formGroup]=\"skillForm\" (ngSubmit)=\"create(skillForm.value)\">\n    <div class=\"new-skill__title\">Adicionar Nova Competência</div>\n    <input formControlName=\"name\" placeholder=\"Nome da Competência\">\n    <input formControlName=\"description\" placeholder=\"Descrição da Competência\">\n    <button type=\"submit\">Cadastrar</button>\n</form>\n\n\n<div class=\"skills\">\n    <span class=\"skills__title\">Lista de Vagas</span>\n    <div class=\"skill\" *ngFor=\"let skill of skills.reverse()\" [id]=\"skill._id\">\n        <button (click)=\"delete(skill)\">Deletar</button>\n        <input [(ngModel)]=\"skill.name\" disabled/>\n        <input [(ngModel)]=\"skill.description\" disabled/>\n        <button *ngIf=\"!(showButtonUpdateSkillID === skill._id); else updateButton\" (click)=\"edit(skill)\"> Editar </button>\n        <ng-template #updateButton>\n            <button (click)=\"update(skill)\">Atualizar</button>\n        </ng-template>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { APIService } from '../api/api.service';\nimport { User } from '../model-interfaces/user';\n\n@Component({\n  selector: 'app-user-config',\n  templateUrl: './user-config.component.html',\n  styleUrls: ['./user-config.component.css']\n})\nexport class UserConfigComponent implements OnInit {\n\n  userForm: FormGroup;\n  evaluators;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: APIService,\n  ) { }\n\n  ngOnInit(): void {\n    let properties = { username: '', password: '', department: '', role: '' };\n    this.userForm = this.formBuilder.group(properties);\n    this.apiService.user.evaluators().subscribe(data=> this.evaluators = data);\n    console.log(this.evaluators);\n  }\n  onSubmit(userData: User) {\n    this.apiService.user.create(userData).subscribe(\n      response => console.log(response),\n      error => console.log(error)\n    );\n  }\n\n}\n","<div class=\"user-info\">\n    <div>\n        <img src=\"https://rmtelefonia.com.br/wp-content/uploads/2015/11/Avatar-masculino.png\" alt=\"...\" class=\"rounded\">\n    </div>\n    <div class=\"user-details\">\n        <span>Nome de Usuário</span>\n        <span>Senha de Acesso</span>\n        <span>Departamento</span>\n        <span>Função</span>\n    </div>\n</div>\n\n<form class=\"user-config\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit(userForm.value)\">\n\n    <div>\n        <label for=\"username\">\n            Nome de Usuário\n        </label>\n        <input id=\"username\" type=\"text\" formControlName=\"username\">\n    </div>\n    \n    <div>\n        <label for=\"password\">\n            Senha de Acesso\n        </label>\n        <input id=\"password\" type=\"text\" formControlName=\"password\">\n    </div>\n    <div>\n        <label for=\"department\">\n            Departamento Responsável\n        </label>\n        <input id=\"department\" type=\"text\" formControlName=\"department\" value=\"SOFTWARE_DEVELOPMENT\">\n    </div>\n    <div>\n        <label for=\"role\">\n            Função\n        </label>\n        <input id=\"role\" type=\"text\" formControlName=\"role\">\n    </div>\n    \n    <button class=\"button\" type=\"submit\">Cadastrar</button>\n\n</form>\n\n\n<div class=\"user-list-title\">Lista de Usuários</div>\n<ul class=\"user-list\">\n    \n    <li><span>ID</span><span>Usuário</span><span>Departamento</span><span>Função</span></li>\n    <li *ngFor=\"let evaluator of evaluators\">\n        <span> 0 </span><span>{{ evaluator.username }}</span><span>{{ evaluator.department }} </span><span>{{ evaluator.role }} </span>\n    </li>\n</ul>\n\n","import { JobOpportunity } from '../model-interfaces/job-opportunity';\nimport { Stage } from '../model-interfaces/stage';\nimport { Skill } from '../model-interfaces/skill';\nimport { FormGroup } from '@angular/forms';\n\nexport const toggleDisabledInputsAndSelect = (idElement: string) => {\n  const element = document.getElementById(idElement);\n  element.childNodes.forEach(node => {\n    if (node.nodeName === 'INPUT' || node.nodeName === 'SELECT')\n      node['disabled'] = !node['disabled'];\n    else if (node.nodeName === 'DIV') {\n      if (node.childNodes.length) {\n        node.childNodes.forEach(n => {\n          if (n.nodeName === 'INPUT' || n.nodeName === 'SELECT')\n            n['disabled'] = !n['disabled'];\n        });\n      }\n    }\n\n  });\n}\n\nexport const hasPropertyWithValueNullOrEmpty = (object: Object, ...props: string[]): boolean => {\n  let result = false;\n  props.forEach(prop => {\n    if (!result) {\n      if (object.hasOwnProperty(prop)) {\n        const value = object[prop];\n        if (!value) result = true;\n        else if (Array.isArray(value) && !value[\"length\"]) result = true;\n      }\n    }\n  });\n  return result;\n}\n\nexport const builderObject = (object: Object, properties: string[]) => {\n  const invalid = hasPropertyWithValueNullOrEmpty(object, ...properties);\n  if (invalid) throw new Error(`Builder Object : the reported object contains properties with invalid values`);\n  return properties.reduce((newObject, prop) => {\n    newObject[prop] = object[prop];\n    return newObject;\n  }, {});\n}\n\nexport const fbGetValue = (form: FormGroup, key: string) => form.get(key).value;\nexport const fbSetValue = (form: FormGroup, key: string, value: any) => form.get(key).setValue(value);","export const ErrorMessages = {\n    authenticate: {\n        valid: \"Valid API access authorization\",\n        invalid: \"API access authorization failed ...\"\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}